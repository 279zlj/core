#include "ShapeType.h"

namespace PPTX
{
	namespace Limit
	{
		ShapeType::ShapeType()
		{
			add("accentBorderCallout1");
			add("accentBorderCallout2");
			add("accentBorderCallout3");
			add("accentCallout1");
			add("accentCallout2");
			add("accentCallout3");
			add("actionButtonBackPrevious");
			add("actionButtonBeginning");
			add("actionButtonBlank");
			add("actionButtonDocument");
			add("actionButtonEnd");
			add("actionButtonForwardNext");
			add("actionButtonHelp");
			add("actionButtonHome");
			add("actionButtonInformation");
			add("actionButtonMovie");
			add("actionButtonReturn");
			add("actionButtonSound");
			add("arc");
			add("bentArrow");
			add("bentConnector2");
			add("bentConnector3");
			add("bentConnector4");
			add("bentConnector5");
			add("bentUpArrow");
			add("bevel");
			add("blockArc");
			add("borderCallout1");
			add("borderCallout2");
			add("borderCallout3");
			add("bracePair");
			add("bracketPair");
			add("callout1");
			add("callout2");
			add("callout3");
			add("can");
			add("chartPlus");
			add("chartStar");
			add("chartX");
			add("chevron");
			add("chord");
			add("circularArrow");
			add("cloud");
			add("cloudCallout");
			add("corner");
			add("cornerTabs");
			add("cube");
			add("curvedConnector2");
			add("curvedConnector3");
			add("curvedConnector4");
			add("curvedConnector5");
			add("curvedDownArrow");
			add("curvedLeftArrow");
			add("curvedRightArrow");
			add("curvedUpArrow");
			add("decagon");
			add("diagStripe");
			add("diamond");
			add("dodecagon");
			add("donut");
			add("doubleWave");
			add("downArrow");
			add("downArrowCallout");
			add("ellipse");
			add("ellipseRibbon");
			add("ellipseRibbon2");
			add("flowChartAlternateProcess");
			add("flowChartCollate");
			add("flowChartConnector");
			add("flowChartDecision");
			add("flowChartDelay");
			add("flowChartDisplay");
			add("flowChartDocument");
			add("flowChartExtract");
			add("flowChartInputOutput");
			add("flowChartInternalStorage");
			add("flowChartMagneticDisk");
			add("flowChartMagneticDrum");
			add("flowChartMagneticTape");
			add("flowChartManualInput");
			add("flowChartManualOperation");
			add("flowChartMerge");
			add("flowChartMultidocument");
			add("flowChartOfflineStorage");
			add("flowChartOffpageConnector");
			add("flowChartOnlineStorage");
			add("flowChartOr");
			add("flowChartPredefinedProcess");
			add("flowChartPreparation");
			add("flowChartProcess");
			add("flowChartPunchedCard");
			add("flowChartPunchedTape");
			add("flowChartSort");
			add("flowChartSummingJunction");
			add("flowChartTerminator");
			add("foldedCorner");
			add("frame");
			add("funnel");
			add("gear6");
			add("gear9");
			add("halfFrame");
			add("heart");
			add("heptagon");
			add("hexagon");
			add("homePlate");
			add("horizontalScroll");
			add("irregularSeal1");
			add("irregularSeal2");
			add("leftArrow");
			add("leftArrowCallout");
			add("leftBrace");
			add("leftBracket");
			add("leftCircularArrow");
			add("leftRightArrow");
			add("leftRightArrowCallout");
			add("leftRightCircularArrow");
			add("leftRightRibbon");
			add("leftRightUpArrow");
			add("leftUpArrow");
			add("lightningBolt");
			add("line");
			add("lineInv");
			add("mathDivide");
			add("mathEqual");
			add("mathMinus");
			add("mathMultiply");
			add("mathNotEqual");
			add("mathPlus");
			add("moon");
			add("nonIsoscelesTrapezoid");
			add("noSmoking");
			add("notchedRightArrow");
			add("octagon");
			add("parallelogram");
			add("pentagon");
			add("pie");
			add("pieWedge");
			add("plaque");
			add("plaqueTabs");
			add("plus");
			add("quadArrow");
			add("quadArrowCallout");
			add("rect");
			add("ribbon");
			add("ribbon2");
			add("rightArrow");
			add("rightArrowCallout");
			add("rightBrace");
			add("rightBracket");
			add("round1Rect");
			add("round2DiagRect");
			add("round2SameRect");
			add("roundRect");
			add("rtTriangle");
			add("smileyFace");
			add("snip1Rect");
			add("snip2DiagRect");
			add("snip2SameRect");
			add("snipRoundRect");
			add("squareTabs");
			add("star10");
			add("star12");
			add("star16");
			add("star24");
			add("star32");
			add("star4");
			add("star5");
			add("star6");
			add("star7");
			add("star8");
			add("straightConnector1");
			add("stripedRightArrow");
			add("sun");
			add("swooshArrow");
			add("teardrop");
			add("trapezoid");
			add("triangle");
			add("upArrow");
			add("upArrowCallout");
			add("upDownArrow");
			add("upDownArrowCallout");
			add("uturnArrow");
			add("verticalScroll");
			add("wave");
			add("wedgeEllipseCallout");
			add("wedgeRectCallout");
			add("wedgeRoundRectCallout");
 		}

		const std::string ShapeType::no_find() const
		{
			return "rect";
		}
	} // namespace Limit
} // namespace PPTX
