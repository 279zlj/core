Полную спецификацию на XSL-FO в формате XSD, которую использует процессор Apache FOP можно посмотреть в fop.xsd
В данной версии документа представлены основные структуры и атрибуты, документ будет расширяться,
например здесь нет таблиц

ver 1.0 от 2009.09.16


1. Корневой элемент 
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
используем пространство имен fo

2. Определение параметров страницы (обязательный элемент) находится внутри узла
<fo:layout-master-set>
</fo:layout-master-set>

3. Именнованые определения параметров страницы внутри узла <fo:layout-master-set>
<fo:simple-page-master>
</fo:simple-page-master>
Атирбуты:
master-name — идентификатор
page-width, page-height, margin, margin-top, margin-bottom, margin-right, margin-left — метрические значения
по стандарту указываются единицы измерения, например page-width="21cm", margin-left="56.7pt"
но для простоты можно принять соглашения какие единицы используем

4. Определение частей страницы внтутри узла <fo:simple-page-master>
4.1 Обязательный узел  — основная часть страницы, 
<fo:region-body>
</fo:region-body>

размеры основной части определяются как
width = simple-page-master.page-width - simple-page-master.margin-left - simple-page-master.margin-right
height = simple-page-master.page-height - simple-page-master.margin-top - simple-page-master.margin-bottom

Атрибуты 
margin, margin-bottom, margin-left, margin-right, margin-top — общее значение полей, отдельно поля (метрические значения)

Таким образом, основной текст располагается в блоке размерами
width = simple-page-master.page-width - simple-page-master.margin-left - simple-page-master.margin-right - region-body.margin-left - region-body.margin-right
height = simple-page-master.page-height - simple-page-master.margin-top - simple-page-master.margin-bottom - region-body.margin-top - region-body.margin-bottom

4.2 Регионы в основной части (в region-body) сверху, снизу, слева, справа:
соответственно
<fo:region-before/>
<fo:region-after/>
<fo:region-start/>
<fo:region-end/>

используются для вывода статического текста, такого как колонтитулы. важно, что эти блоки располагаются в основном регионе (перекрывают его) а не вне его
(опциональное свойство, в первую очередь надо реализовать вывод основного блока region-body)

аттрибуты
extent — размер (протяженность) региона

5. Пример определения параметров страницы

<?xml version="1.0" encoding="utf-8"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
  <fo:layout-master-set>
    <fo:simple-page-master
        master-name="simple"
        page-width="10cm"
        page-height="20cm"
        margin-bottom="1cm"
        margin-top="2cm"
        margin-left="1cm"
        margin-right="1cm">
      <fo:region-body margin="0.5cm"/>
    </fo:simple-page-master>
  </fo:layout-master-set>
....
</fo:root>  

Основной блок текста будет выводится в прямоугольнике, который отстоит сверху на 2cm + 0.5cm, слева на 1cm + 0.5cm,
имеет размеры width = 10cm - 1cm - 2x0.5cm - 1cm, height = 20cm - 2cm - 2x0.5cm - 1cm

6. Содержимое страницы находится внутри узла
<fo:page-sequence>
</fo:page-sequence>
(потомок fo:root, должен располагаться после fo:layout-master-set)

Обязательный атрибут:
master-reference — имя-ссылка на определение параметров страницы, используя пример выше
<fo:page-sequence master-reference="simple">

7. Основной текст находится внутри узла
<fo:flow></fo:flow>
(потомок fo:page-sequence)
имеет атрибут
flow-name="xsl-region-body" (значение пока принимаем фиксированным)

8. Содержимое узла <fo:flow></fo:flow>:
По крайней мере один из тегов block|block-container|table-and-caption|table|list-block (в соответствии со спецификацей)


9. <fo:block></fo:block> представялет собой блок текста для отображения параграфов, заголовков и т.д.
Таким образом можно написать пример простого fo - документа:

<?xml version="1.0" encoding="utf-8"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
  <fo:layout-master-set>
  
    <fo:simple-page-master
        master-name="simple"
        page-width="21cm"
        page-height="29.7cm"
        margin="1cm">
		
      <fo:region-body/>
	  
    </fo:simple-page-master>
	
  </fo:layout-master-set>
  
  <fo:page-sequence master-reference="simple">
	<fo:flow flow-name="xsl-region-body">
		<fo:block>Текст в блоке</fo:block>
    </fo:flow>
  </fo:page-sequence>
  
</fo:root>  

документ имеет размеры страницы A4, поля со всех сторон равные 1cm и блок текста с форматированием по умолчанию

10. <fo:inline></fo:inline> используется для формата части текста внутри блока

Например
<fo:block>Текст в <fo:inline color="red">блоке</fo:inline></fo:block>

слово "блоке" будет выделено красным цветом

11. Применение свойств символов
Свойства конкретного символа (размер, шрифт, цвет, эффекты шрифта и т.д.) имеют значения по умолчанию, определенные реализацией
и могут каскадно переопределятся свойствами параграфа или внутри тега inline

Пример:

<fo:block font-size="10pt" color="green">Текст в <fo:inline color="red" font-family="Arial">блоке</fo:inline></fo:block>

Блок переопределяет свойства font-size и color, все символы которые находятся внутри блока и не переопределены,
имеют эти значения, остальные параметры имеют значение по умолчанию (например, шрифт "Times New Roman", стиль шрифта Normal)
Внутри блока в теге inline свойства переопределяются: устанавливается конкретное значение шрифта и переопределяется цвет, размер шрифта наследуется от свойств блока (10pt)

12. Атрибуты символов (описываю основные атрибуты и их значения, атрибуты и возможные значения могут добавляться)

12.1 font-family - имя шрифта, например font-family="Times New Roman"
12.2 font-size - размер шрифта, например font-size="12pt"
12.3 font-style -  стиль, возможные значения: "normal", "italic" (курсив)
12.4 text-decoration - возможные значения: "none", "underline"(подчеркнутый), "line-through" (перечеркнутый) — тут стандарт почему-то определяет одно из двух,
но не вместе, возможно, надо ввести дополнительное значение
12.5 font-weight — возможные значения: "normal", "bold" (жирный)
12.6 text-shadow — тень. возможные значения: "none", ColorType, ? — это свойство по стандарту можно применять только к пока не используемому у нас элементу <fo:character/>,
но для удобства нарушим тут стандарт. Определение типа ColorType должно быть оговорено отдельно
12.7 color — цвет шрифта, ColorType
12.8 background-color - цвет фона, ColorType
12.9 letter-spacing — расстояние между символами
12.10 font-variant — значение "normal" (выключено), "small-caps" — капитель (см. http://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D0%BF%D0%B8%D1%82%D0%B5%D0%BB%D1%8C_%28%D1%88%D1%80%D0%B8%D1%84%D1%82%29)
12.11 text-transform — значения "none" (выключено), "capitalize" — первый символ каждой строки печатается заглавным, "uppercase" — все символы печатаются заглавными, "lowercase" — все символы строчные
12.12 baseline-shift — смещение символов в строке, значения "super" — верхний индекс (о точных значениях необходима договоренность), "sub" — нижний индекс,
"baseline" — выключено, также возможны конткретные значения (например в процетах)
12.13 language — язык, "EN", "RU" и т.д. (?)
12.14 

13. Атрибуты параграфа (блока <fo:block></fo:block>)
13.1 Атрибуты из п. 12 применимы и к блоку
13.2 text-align — выравнивание, возможные значения: "left", "right", "center", "justify"
13.3 break-before — с новой страницы перед параграфом, значения "auto" (выключено), "page" (разрыв сраницы)
13.4 keep-together.within-page — предотвращает разрыв страницы в данном параграфе, значения "auto" (выключено), "always" (включено)
13.5 keep-with-next — предотвращает разрыв страницы между текущим и следующим параграфом, применяется, например,
для заголовков, значения: "auto" (выключено), "always" (включено)
13.6 widows — запрещает печатать последнюю строку параграфа на новой странице, значения "1" (выключено), "2" (включено)
13.7 orphans — запрещает печатать первую строку параграфа в конце страницы "1" (выключено), "2" (включено)
13.8 space-before — отступ перед параграфом в pt (возможно, в дальнейшем сделать значения space-before.minimum space-before.maximum)
13.9 space-after — аналогично после параграфа
13.10 line-height — расстояние между строками в параграфе (возможно, в дальнейшем сделать значения line-height.minimum space-before.maximum)
13.11 start-indent, end-indent — отступ для параграфа слева и справа
13.12 text-indent — отступ первой строки параграфа
13.13


Еще один пример FO документа с атрибутами, результат в файле simple4.fo.pdf

<?xml version="1.0" encoding="utf-8"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
  <fo:layout-master-set>
  
    <fo:simple-page-master
        master-name="simple"
        page-width="21cm"
        page-height="29.7cm"
        margin="1cm">
		
      <fo:region-body/>
	  
    </fo:simple-page-master>
	
  </fo:layout-master-set>
  
  <fo:page-sequence master-reference="simple">
  
	<fo:flow flow-name="xsl-region-body">
		<fo:block
			font-family="Times New Roman"
			font-weight="bold"
			font-size="16pt"
			keep-with-next="always"
			text-align="center"
			space-after="1cm">
		Page footer and page header
		</fo:block>
		
		<fo:block
			font-family="Arial"
			font-size="10pt"
			text-align="justify"
			space-after="0.5cm">
		A <fo:inline font-weight="bold" color="blue" text-decoration="underline">page footer</fo:inline> or simply footer in typography is that material which is
		separated from the main body of text and appears at the bottom of a printed page.
		Word processing programs<fo:inline baseline-shift="super" font-size="7pt">[1]</fo:inline> usually provide for the creation and maintenance of page footers,
		which are often the same from page to page, with merely small differences
		in information, such as page number. Footnotes are usually placed in or near the page footer.
		</fo:block>
		
		<fo:block
			font-family="Courier New"
			font-size="12pt"
			text-align="left">
		A <fo:inline font-weight="bold" color="blue" text-decoration="underline">page header</fo:inline> or simply header in typography
		is that material which is separated from the main body
		of text and appears at the top of a printed page. Word processing programs usually provide for the
		creation and maintenance of page headers, which are often the same from page to page, with merely
		small differences in information, such as page number.		
		</fo:block>
    </fo:flow>
	
  </fo:page-sequence>
  
</fo:root>  











