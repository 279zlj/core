#ifndef _ERROR_H
#define _ERROR_H

#pragma once 

#include "Utils.h"

#define AVS_PDFWRITER_ERROR_FIRST	0x0300
#define AVS_ERROR_FIRST				0x7f000000

#define AVS_OFFICEPDFWRITER_ERROR_ARRAY_COUNT_ERR                       (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0001)
#define AVS_OFFICEPDFWRITER_ERROR_ARRAY_ITEM_NOT_FOUND                  (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0002)
#define AVS_OFFICEPDFWRITER_ERROR_ARRAY_ITEM_UNEXPECTED_TYPE            (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0003)
#define AVS_OFFICEPDFWRITER_ERROR_BINARY_LENGTH_ERR                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0004)
#define AVS_OFFICEPDFWRITER_ERROR_CANNOT_GET_PALLET                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0005)
#define AVS_OFFICEPDFWRITER_ERROR_DICT_COUNT_ERR                        (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0007)
#define AVS_OFFICEPDFWRITER_ERROR_DICT_ITEM_NOT_FOUND                   (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0008)
#define AVS_OFFICEPDFWRITER_ERROR_DICT_ITEM_UNEXPECTED_TYPE             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0009)
#define AVS_OFFICEPDFWRITER_ERROR_DICT_STREAM_LENGTH_NOT_FOUND          (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x000A)
#define AVS_OFFICEPDFWRITER_ERROR_DOC_ENCRYPTDICT_NOT_FOUND             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x000B)
#define AVS_OFFICEPDFWRITER_ERROR_DOC_INVALID_OBJECT                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x000C)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x000D)
#define AVS_OFFICEPDFWRITER_ERROR_DUPLICATE_REGISTRATION                (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x000E)
#define AVS_OFFICEPDFWRITER_ERROR_EXCEED_JWW_CODE_NUM_LIMIT             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x000F)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0010)
#define AVS_OFFICEPDFWRITER_ERROR_ENCRYPT_INVALID_PASSWORD              (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0011)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0012)
#define AVS_OFFICEPDFWRITER_ERROR_ERR_UNKNOWN_CLASS                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0013)
#define AVS_OFFICEPDFWRITER_ERROR_EXCEED_GSTATE_LIMIT                   (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0014)
#define AVS_OFFICEPDFWRITER_ERROR_FAILD_TO_ALLOC_MEM                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0015)
#define AVS_OFFICEPDFWRITER_ERROR_FILE_IO_ERROR                         (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0016)
#define AVS_OFFICEPDFWRITER_ERROR_FILE_OPEN_ERROR                       (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0017)
#define AVS_OFFICEPDFWRITER_ERROR_FILE_WRITE_ERROR                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0018)
#define AVS_OFFICEPDFWRITER_ERROR_FONT_EXISTS                           (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0019)
#define AVS_OFFICEPDFWRITER_ERROR_FONT_INVALID_WIDTHS_TABLE             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x001A)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_AFM_HEADER                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x001B)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_ANNOTATION                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x001C)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x001D)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_BIT_PER_COMPONENT             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x001E)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_CHAR_METRICS_DATA             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x001F)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_COLOR_SPACE                   (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0020)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_COMPRESSION_MODE              (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0021)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_DATE_TIME                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0022)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_DESTINATION                   (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0023)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0024)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_DOCUMENT                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0025)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_DOCUMENT_STATE                (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0026)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_ENCODER                       (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0027)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_ENCODER_TYPE                  (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0028)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0029)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x002A)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_ENCODING_NAME                 (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x002B)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_ENCRYPT_KEY_LEN               (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x002C)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_FONTDEF_DATA                  (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x002D)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_FONTDEF_TYPE                  (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x002E)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_FONT_NAME                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x002F)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_IMAGE                         (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0030)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_JPEG_DATA                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0031)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_N_DATA                        (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0032)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_OBJECT                        (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0033)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_OBJ_ID                        (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0034)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_OPERATION                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0035)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_OUTLINE                       (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0036)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_PAGE                          (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0037)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_PAGES                         (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0038)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_PARAMETER                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0039)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x003A)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_PNG_IMAGE                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x003B)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_STREAM                        (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x003C)
#define AVS_OFFICEPDFWRITER_ERROR_MISSING_FILE_NAME_ENTRY               (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x003D)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x003E)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_TTC_FILE                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x003F)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_TTC_INDEX                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0040)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_WX_DATA                       (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0041)
#define AVS_OFFICEPDFWRITER_ERROR_ITEM_NOT_FOUND                        (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0042)
#define AVS_OFFICEPDFWRITER_ERROR_LIBPNG_ERROR                          (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0043)
#define AVS_OFFICEPDFWRITER_ERROR_NAME_INVALID_VALUE                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0044)
#define AVS_OFFICEPDFWRITER_ERROR_NAME_OUT_OF_RANGE                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0045)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0046)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0047)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_PARAM_COUNT              (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0048)
#define AVS_OFFICEPDFWRITER_ERROR_PAGES_MISSING_KIDS_ENTRY              (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0049)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_CANNOT_FIND_OBJECT               (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x004A)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_CANNOT_GET_ROOT_PAGES            (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x004B)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_CANNOT_RESTORE_GSTATE            (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x004C)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_CANNOT_SET_PARENT                (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x004D)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_FONT_NOT_FOUND                   (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x004E)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_FONT                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x004F)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_FONT_SIZE                (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0050)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_GMODE                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0051)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_INDEX                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0052)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_ROTATE_VALUE             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0053)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_SIZE                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0054)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_XOBJECT                  (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0055)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_OUT_OF_RANGE                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0056)
#define AVS_OFFICEPDFWRITER_ERROR_REAL_OUT_OF_RANGE                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0057)
#define AVS_OFFICEPDFWRITER_ERROR_STREAM_EOF                            (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0058)
#define AVS_OFFICEPDFWRITER_ERROR_STREAM_READLN_CONTINUE                (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0059)
//                                                                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x005A)
#define AVS_OFFICEPDFWRITER_ERROR_STRING_OUT_OF_RANGE                   (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x005B)
#define AVS_OFFICEPDFWRITER_ERROR_THIS_FUNC_WAS_SKIPPED                 (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x005C)
#define AVS_OFFICEPDFWRITER_ERROR_TTF_CANNOT_EMBEDDING_FONT             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x005D)
#define AVS_OFFICEPDFWRITER_ERROR_TTF_INVALID_CMAP                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x005E)
#define AVS_OFFICEPDFWRITER_ERROR_TTF_INVALID_FORMAT                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x005F)
#define AVS_OFFICEPDFWRITER_ERROR_TTF_MISSING_TABLE                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0060)
#define AVS_OFFICEPDFWRITER_ERROR_UNSUPPORTED_FONT_TYPE                 (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0061)
#define AVS_OFFICEPDFWRITER_ERROR_UNSUPPORTED_FUNC                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0062)
#define AVS_OFFICEPDFWRITER_ERROR_UNSUPPORTED_JPEG_FORMAT               (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0063)
#define AVS_OFFICEPDFWRITER_ERROR_UNSUPPORTED_TYPE1_FONT                (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0064)
#define AVS_OFFICEPDFWRITER_ERROR_XREF_COUNT_ERR                        (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0065)
#define AVS_OFFICEPDFWRITER_ERROR_ZLIB_ERROR                            (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0066)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_PAGE_INDEX                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0067)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_URL                           (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0068)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_LAYOUT_OUT_OF_RANGE              (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0069)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_MODE_OUT_OF_RANGE                (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0070)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_NUM_STYLE_OUT_OF_RANGE           (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0071)
#define AVS_OFFICEPDFWRITER_ERROR_ANNOT_INVALID_ICON                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0072)
#define AVS_OFFICEPDFWRITER_ERROR_ANNOT_INVALID_BORDER_STYLE            (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0073)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_DIRECTION                (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0074)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_FONT                          (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0075)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INSUFFICIENT_SPACE               (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0076)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_DISPLAY_TIME             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0077)
#define AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_TRANSITION_TIME          (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0078)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_PAGE_SLIDESHOW_TYPE           (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0079)
#define AVS_OFFICEPDFWRITER_ERROR_EXT_GSTATE_OUT_OF_RANGE               (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0080)
#define AVS_OFFICEPDFWRITER_ERROR_INVALID_EXT_GSTATE                    (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0081)
#define AVS_OFFICEPDFWRITER_ERROR_EXT_GSTATE_READ_ONLY                  (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0082)
#define AVS_OFFICEPDFWRITER_ERROR_CURRENT_DESTINATION_NOT_FOUND         (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0083)
#define AVS_OFFICEPDFWRITER_ERROR_CURRENT_EXTGSTATE_NOT_FOUND           (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0084)        
#define AVS_OFFICEPDFWRITER_ERROR_CURRENT_FONT_NOT_FOUND                (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0085)             
#define AVS_OFFICEPDFWRITER_ERROR_CURRENT_ANNOTATION_NOT_FOUND          (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0086)       
#define AVS_OFFICEPDFWRITER_ERROR_CURRENT_OUTLINE_NOT_FOUND             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0087)          
#define AVS_OFFICEPDFWRITER_ERROR_CURRENT_IMAGE_NOT_FOUND               (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0088)            
#define AVS_OFFICEPDFWRITER_ERROR_FONT_NOT_FOUND                        (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x0089)            
#define AVS_OFFICEPDFWRITER_ERROR_DRAW_PATH                             (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x008A)            
#define AVS_OFFICEPDFWRITER_ERROR_BAD_SAFEARRAY                         (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x008B)            
#define AVS_OFFICEPDFWRITER_ERROR_AVS_REGISTRATION                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x008C)  
#define AVS_OFFICEPDFWRITER_ERROR_BAD_COMMAND_TYPE                      (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x008D)
#define AVS_OFFICEPDFWRITER_ERROR_NOT_ENOUGH_MEMORY                     (AVS_ERROR_FIRST + AVS_PDFWRITER_ERROR_FIRST + 0x008E)

typedef struct TErrorPair 
{
    unsigned long nErrorNo;
    const char   *sErrorName;
} ErrorPair;

static const ErrorPair c_aoErrorNameMap[] = 
{
	{ NOERROR,                                                      "No error"},
	{ AVS_OFFICEPDFWRITER_ERROR_ARRAY_COUNT_ERR,                    "Array: Count error"},
	{ AVS_OFFICEPDFWRITER_ERROR_ARRAY_ITEM_NOT_FOUND,               "Arrar: Item not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_ARRAY_ITEM_UNEXPECTED_TYPE,         "Array: Item unexpected type"},
	{ AVS_OFFICEPDFWRITER_ERROR_BINARY_LENGTH_ERR,                  "Binary length error"},
	{ AVS_OFFICEPDFWRITER_ERROR_CANNOT_GET_PALLET,                  "Cannot get pallet"},
	{ AVS_OFFICEPDFWRITER_ERROR_DICT_COUNT_ERR,                     "Dictionary: Count error"},
	{ AVS_OFFICEPDFWRITER_ERROR_DICT_ITEM_NOT_FOUND,                "Dictionary: Item not found"}, 
	{ AVS_OFFICEPDFWRITER_ERROR_DICT_ITEM_UNEXPECTED_TYPE,          "Dictionary: Item unexpected type"},
	{ AVS_OFFICEPDFWRITER_ERROR_DICT_STREAM_LENGTH_NOT_FOUND,       "Dictionary Stream: Length not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_DOC_ENCRYPTDICT_NOT_FOUND,          "Document: Encrypt Dictionary not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_DOC_INVALID_OBJECT,                 "Document: Invalid object"},

	{ AVS_OFFICEPDFWRITER_ERROR_DUPLICATE_REGISTRATION,             "Duplicate registration"},
	{ AVS_OFFICEPDFWRITER_ERROR_EXCEED_JWW_CODE_NUM_LIMIT,          "Exceed JWW code number limit"},

	{ AVS_OFFICEPDFWRITER_ERROR_ENCRYPT_INVALID_PASSWORD,           "Encrypt: Invalid password"},

	{ AVS_OFFICEPDFWRITER_ERROR_ERR_UNKNOWN_CLASS,                  "Unknown object class"},
	{ AVS_OFFICEPDFWRITER_ERROR_EXCEED_GSTATE_LIMIT,                "Exceed GState limit"},
	{ AVS_OFFICEPDFWRITER_ERROR_FAILD_TO_ALLOC_MEM,                 "Failed to allocate memory"},
	{ AVS_OFFICEPDFWRITER_ERROR_FILE_IO_ERROR,                      "File IO error"},
	{ AVS_OFFICEPDFWRITER_ERROR_FILE_OPEN_ERROR,                    "File open error"},
	{ AVS_OFFICEPDFWRITER_ERROR_FILE_WRITE_ERROR,                   "File write error"},
	{ AVS_OFFICEPDFWRITER_ERROR_FONT_EXISTS,                        "Font already exist"},
	{ AVS_OFFICEPDFWRITER_ERROR_FONT_INVALID_WIDTHS_TABLE,          "Invalid fonts Widths Table"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_AFM_HEADER,                 "Invalid AFM header"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_ANNOTATION,                 "Invalid annotation"},

	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_BIT_PER_COMPONENT,          "Invalid bits per component"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_CHAR_METRICS_DATA,          "Invalid char metrics data"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_COLOR_SPACE,                "Invalid color space"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_COMPRESSION_MODE,           "Invalid compression mode"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_DATE_TIME,                  "Invalid date time"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_DESTINATION,                "Invalid destination"},

	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_DOCUMENT,                   "Invalid document"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_DOCUMENT_STATE,             "Invalid document state"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_ENCODER,                    "Invalid encoder"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_ENCODER_TYPE,               "Invalid encoder type"},


	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_ENCODING_NAME,              "Invalid encoder name"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_ENCRYPT_KEY_LEN,            "Invalid encrypt key len"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_FONTDEF_DATA,               "Invalid fontdef data"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_FONTDEF_TYPE,               "Invalid fontdef type"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_FONT_NAME,                  "Invalid font name"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_IMAGE,                      "Invalid image"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_JPEG_DATA,                  "Invalid jpeg data"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_N_DATA,                     "Invalid PostScripts name"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_OBJECT,                     "Invalid object"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_OBJ_ID,                     "Invalid object ID"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_OPERATION,                  "Invalid operation"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_OUTLINE,                    "Invalid outline"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_PAGE,                       "Invalid page"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_PAGES,                      "Invalid pages"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_PARAMETER,                  "Invalid parameter"},

	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_PNG_IMAGE,                  "Invalid png image"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_STREAM,                     "Invalid stream"},
	{ AVS_OFFICEPDFWRITER_ERROR_MISSING_FILE_NAME_ENTRY,            "Missing file name entry"},

	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_TTC_FILE,                   "Invalid True Type Collection file"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_TTC_INDEX,                  "Invalid True Type Collection index"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_WX_DATA,                    "Invalid widths data in AFM file"},
	{ AVS_OFFICEPDFWRITER_ERROR_ITEM_NOT_FOUND,                     "Item not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_LIBPNG_ERROR,                       "Libpng error"},
	{ AVS_OFFICEPDFWRITER_ERROR_NAME_INVALID_VALUE,                 "Name: Invalid value"},
	{ AVS_OFFICEPDFWRITER_ERROR_NAME_OUT_OF_RANGE,                  "Name: Out of range"},

	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_PARAM_COUNT,           "Page: Invalid parameters count"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGES_MISSING_KIDS_ENTRY,           "Pages: Missing kids entry"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_CANNOT_FIND_OBJECT,            "Page: Can't find object"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_CANNOT_GET_ROOT_PAGES,         "Page: Can't get root Pages"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_CANNOT_RESTORE_GSTATE,         "Page: Can't restore GState"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_CANNOT_SET_PARENT,             "Page: Can't set parent"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_FONT_NOT_FOUND,                "Page: Font not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_FONT,                  "Page: Invalid font"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_FONT_SIZE,             "Page: Invalid font size"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_GMODE,                 "Page: Invalid graphics mode"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_INDEX,                 "Page: Invalid index"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_ROTATE_VALUE,          "Page: Invalid rotate value"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_SIZE,                  "Page: Invalid size"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_XOBJECT,               "Page: Invalid XObject"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_OUT_OF_RANGE,                  "Page: Out of Range"},
	{ AVS_OFFICEPDFWRITER_ERROR_REAL_OUT_OF_RANGE,                  "Real: Out of Range"},
	{ AVS_OFFICEPDFWRITER_ERROR_STREAM_EOF,                         "Stream: EOF"},
	{ AVS_OFFICEPDFWRITER_ERROR_STREAM_READLN_CONTINUE,             "Stream: Read line continiue"},

	{ AVS_OFFICEPDFWRITER_ERROR_STRING_OUT_OF_RANGE,                "String: Out of Range"},
	{ AVS_OFFICEPDFWRITER_ERROR_THIS_FUNC_WAS_SKIPPED,              "This function was skipped"},
	{ AVS_OFFICEPDFWRITER_ERROR_TTF_CANNOT_EMBEDDING_FONT,          "True Type Font: Can't embedding font"},
	{ AVS_OFFICEPDFWRITER_ERROR_TTF_INVALID_CMAP,                   "True Type Font: Invalid CMap"},
	{ AVS_OFFICEPDFWRITER_ERROR_TTF_INVALID_FORMAT,                 "True Type Font: Invalid format"},
	{ AVS_OFFICEPDFWRITER_ERROR_TTF_MISSING_TABLE,                  "True Type Font: Missing table"},
	{ AVS_OFFICEPDFWRITER_ERROR_UNSUPPORTED_FONT_TYPE,              "Unsupported font type"},
	{ AVS_OFFICEPDFWRITER_ERROR_UNSUPPORTED_FUNC,                   "Unsupported function"},
	{ AVS_OFFICEPDFWRITER_ERROR_UNSUPPORTED_JPEG_FORMAT,            "Unsupported jpeg format"},
	{ AVS_OFFICEPDFWRITER_ERROR_UNSUPPORTED_TYPE1_FONT,             "Unsupported Type1 font"},
	{ AVS_OFFICEPDFWRITER_ERROR_XREF_COUNT_ERR,                     "XRef: Count error"},
	{ AVS_OFFICEPDFWRITER_ERROR_ZLIB_ERROR,                         "ZLIB: Error"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_PAGE_INDEX,                 "Invalid page index"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_URL,                        "Invalid URL"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_LAYOUT_OUT_OF_RANGE,           "Page Layout out of range"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_MODE_OUT_OF_RANGE,             "Page Mode out of range"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_NUM_STYLE_OUT_OF_RANGE,        "Page Num style out of range"},
	{ AVS_OFFICEPDFWRITER_ERROR_ANNOT_INVALID_ICON,                 "Annotation: Invalid icon"},
	{ AVS_OFFICEPDFWRITER_ERROR_ANNOT_INVALID_BORDER_STYLE,         "Annotation: Invalid border style"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_DIRECTION,             "Page: Invalid direction"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_FONT,                       "Invalid font"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INSUFFICIENT_SPACE,            "Page: Insufficient space"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_DISPLAY_TIME,          "Page: Invalid display time"},
	{ AVS_OFFICEPDFWRITER_ERROR_PAGE_INVALID_TRANSITION_TIME,       "Page: Invalid transition time"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_PAGE_SLIDESHOW_TYPE,        "Invalid slideshow type"},
	{ AVS_OFFICEPDFWRITER_ERROR_EXT_GSTATE_OUT_OF_RANGE,            "ExtGState out of range"},
	{ AVS_OFFICEPDFWRITER_ERROR_INVALID_EXT_GSTATE,                 "Invalid ExtGState"},
	{ AVS_OFFICEPDFWRITER_ERROR_EXT_GSTATE_READ_ONLY,               "ExtGState type is read only"},
	{ AVS_OFFICEPDFWRITER_ERROR_CURRENT_DESTINATION_NOT_FOUND,      "Current Destination not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_CURRENT_EXTGSTATE_NOT_FOUND,        "Current ExtGState not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_CURRENT_FONT_NOT_FOUND,             "Current Font not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_CURRENT_ANNOTATION_NOT_FOUND,       "Current Annotation not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_CURRENT_OUTLINE_NOT_FOUND,          "Current Outline not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_CURRENT_IMAGE_NOT_FOUND,            "Current Image not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_FONT_NOT_FOUND,                     "Font not found"},
	{ AVS_OFFICEPDFWRITER_ERROR_DRAW_PATH,                          "Wrong Draw Path type"},
	{ AVS_OFFICEPDFWRITER_ERROR_BAD_SAFEARRAY,                      "Bad Safe Array"},   
	{ AVS_OFFICEPDFWRITER_ERROR_AVS_REGISTRATION,                   "AVSRegistration turn off"},
	{ AVS_OFFICEPDFWRITER_ERROR_NOT_ENOUGH_MEMORY,					"NOT ENOUGH MEMORY"},
	{ 0xFFFF,                                                       NULL}

};

//
//  Error 
//

typedef struct  TErrorRec  *Error;

typedef struct  TErrorRec 
{
    unsigned long           nErrorNo;
    unsigned long           nDetailNo;
    ErrorHandler            ErrorFn;
    void                   *pUserData;
} ErrorRec;


/*  ErrorInit
 *
 *  Если ErrorFn = NULL, тогда по умолчанию устанавливается error-handler.
 *  pUserData используется для определения объекта, в котором обнаружилась ошибка.
 *
 */
static void ErrorInit                  (Error oError, void *pUserData)
{
	UtilsMemSet( oError, 0, sizeof(ErrorRec) );

	oError->pUserData = pUserData;
}

static void ErrorReset                 (Error oError)
{
	oError->nErrorNo  = NOERROR;
	oError->nDetailNo = NOERROR;
}
static unsigned long ErrorGetCode      (Error oError)
{
	return oError->nErrorNo;
}

static unsigned long ErrorGetDetailCode(Error oError)
{
	return oError->nDetailNo;
}
static const char *  ErrorGetString    (Error oError);
static unsigned long SetError          (Error oError, unsigned long nErrorNo, unsigned long nDetailNo)
{
	oError->nErrorNo  = nErrorNo;
	oError->nDetailNo = nDetailNo;
	const char *sError = ErrorGetString( oError );

    return nErrorNo;
}

static unsigned long CheckError        (Error oError)
{
	if ( oError->nErrorNo != OK && oError->ErrorFn )
		oError->ErrorFn( oError->nErrorNo, oError->nDetailNo, oError->pUserData);

	return oError->nErrorNo;
}

static unsigned long RaiseError        (Error oError, unsigned long nErrorNo, unsigned long nDetailNo)
{
    SetError( oError, nErrorNo, nDetailNo);

    return CheckError(oError);
}

static void          CopyError         (Error oDst, Error oSrc)
{
	oDst->nErrorNo  = oSrc->nErrorNo;
	oDst->nDetailNo = oSrc->nDetailNo;
	oDst->ErrorFn   = oSrc->ErrorFn;
	oDst->pUserData = oSrc->pUserData;
}

static const char *  ErrorGetString    (Error oError)
{
    const ErrorPair* pMap = c_aoErrorNameMap;

	while ( pMap->nErrorNo <= oError->nErrorNo ) 
	{
		if ( pMap->nErrorNo == oError->nErrorNo )
			return pMap->sErrorName;
        pMap++;
    }

	return c_aoErrorNameMap[0].sErrorName;

}
#endif /* _ERROR_H */

